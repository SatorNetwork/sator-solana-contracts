var searchIndex = JSON.parse('{\
"sator_reward":{"doc":"Reward for viewers.","t":[7,5,0,5,0,5,0,0,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,13,3,13,3,4,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,18,18,18,18,3,3,18,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11],"n":["ID","check_id","errors","id","instruction","program_id","state","types","Error","InitializeQuizWinnerIsNotInList","Overflow","borrow","borrow_mut","example","fmt","from","into","into","into","into","to_error_code","to_i64","to_u64","try_from","try_into","type_id","vzip","Claim","InitializeQuiz","InitializeQuizInput","InitializeShow","InitializeShowInput","InitializeViewer","InitializeViewerInput","Instruction","WinnerInput","add_definitions_recursively","add_definitions_recursively","add_definitions_recursively","add_definitions_recursively","add_definitions_recursively","amount","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","declaration","declaration","declaration","declaration","declaration","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_const","deserialize_const","deserialize_const","deserialize_const","deserialize_const","eq","eq","example","example","example","example","example","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","initialize_quiz","initialize_show","initialize_viewer","into","into","into","into","into","ne","ne","owner","points","reward_lock_time","serialize","serialize","serialize","serialize","serialize","serialize_const","serialize_const","serialize_const","serialize_const","serialize_const","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","user","vzip","vzip","vzip","vzip","vzip","winners","LEN","LEN","LEN","QUIZES","Quiz","Show","TOKEN_ACCOUNT","Viewer","add_definitions_recursively","add_definitions_recursively","add_definitions_recursively","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","declaration","declaration","declaration","default","default","default","deserialize","deserialize","deserialize","deserialize_const","deserialize_const","deserialize_const","example","example","example","fmt","fmt","fmt","from","from","from","index","initialized","initialized","initialized","into","into","into","lock_time","locked_until","owner","quizes_index","serialize","serialize","serialize","serialize_const","serialize_const","serialize_const","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uninitialized","uninitialized","uninitialized","version","version","version","vzip","vzip","vzip","winners","Winner","add_definitions_recursively","borrow","borrow_mut","claimed","clone","clone_into","declaration","default","deserialize","deserialize_const","example","fmt","from","into","points","serialize","serialize_const","to_owned","try_from","try_into","type_id","user_wallet","vzip"],"q":["sator_reward","","","","","","","","sator_reward::errors","","","","","","","","","","","","","","","","","","","sator_reward::instruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sator_reward::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sator_reward::types","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The static program ID","Confirms that a given pubkey is equivalent to the program …","","Returns the program ID","Program instruction state","","Program owned state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","amount of tokens to distribute for this quiz","","","","","","","","","","","Creates Instruction::Claim wins on behalf of user. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates Instruction::InitializeQuiz instruction which …","Creates Instruction::InitializeShow instruction which …","Creates Instruction::InitializeViewer instruction which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","something that uniquely represent user","","","","","","less than or equal to 5","","","","","Up to N winners with points, derived from show + counter. …","show reward pool, used to derive Show::token_account","","derived from wallet + show","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error if not initialized","Error if not initialized","Error if not initialized","","","","period after which user can claim reward","","owner of the show","next quiz index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,0,2,0,2,0,0,0,3,4,2,5,6,6,3,4,2,5,6,3,4,2,5,6,0,3,4,2,5,6,3,4,2,5,6,3,4,2,5,6,5,6,3,4,2,5,6,3,4,2,5,6,3,4,3,4,2,5,6,3,4,2,5,6,3,4,2,5,6,0,0,0,3,4,2,5,6,3,4,5,5,3,3,4,2,5,6,3,4,2,5,6,3,4,2,5,6,3,4,2,5,6,3,4,2,5,6,3,4,2,5,6,4,3,4,2,5,6,6,7,8,9,7,0,0,7,0,7,8,9,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,9,7,8,9,7,8,9,7,9,7,7,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,8,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],"f":[null,[[["pubkey",3]],["bool",15]],null,[[],["pubkey",3]],null,[[],["programpubkey",6]],null,null,null,null,null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u32",15]],[[],["programresult",6]],[[],["programerror",4]],[[],["u32",15]],[[],[["option",4],["i64",15]]],[[],[["u64",15],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[["hashmap",3]]],[[["hashmap",3]]],[[["hashmap",3]]],[[["hashmap",3]]],[[["hashmap",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["signerpubkey",6],["tokenaccountpubkey",6],["vec",3],["pubkey",3],["pubkey",3]],[["programerror",4],["instruction",3],["result",4]]],[[],["initializeshowinput",3]],[[],["initializeviewerinput",3]],[[],["instruction",4]],[[],["winnerinput",3]],[[],["initializequizinput",3]],[[]],[[]],[[]],[[]],[[]],[[],["declaration",6]],[[],["declaration",6]],[[],["declaration",6]],[[],["declaration",6]],[[],["declaration",6]],[[],["winnerinput",3]],[[],["initializequizinput",3]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[["initializeshowinput",3]],["bool",15]],[[["initializeviewerinput",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["signerpubkey",6],["vec",3],["initializequizinput",3],["pubkey",3],["u16",15],["pubkey",3]],[["programerror",4],["instruction",3],["result",4]]],[[["signerpubkey",6],["mintpubkey",6],["initializeshowinput",3]],[["programerror",4],["instruction",3],["result",4]]],[[["signerpubkey",6],["initializeviewerinput",3],["pubkey",3]],[["programerror",4],["instruction",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[["initializeshowinput",3]],["bool",15]],[[["initializeviewerinput",3]],["bool",15]],null,null,null,[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["error",3],["result",4]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["hashmap",3]]],[[["hashmap",3]]],[[["hashmap",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["declaration",6]],[[],["declaration",6]],[[],["declaration",6]],[[],["show",3]],[[],["viewer",3]],[[],["quiz",3]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[],["programresult",6]],[[],["programresult",6]],[[],["programresult",6]],[[]],[[]],[[]],null,null,null,null,[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["programresult",6]],[[],["programresult",6]],[[],["programresult",6]],null,null,null,[[]],[[]],[[]],null,null,[[["hashmap",3]]],[[]],[[]],null,[[],["winner",3]],[[]],[[],["declaration",6]],[[],["winner",3]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]]],"p":[[4,"Error"],[4,"Instruction"],[3,"InitializeShowInput"],[3,"InitializeViewerInput"],[3,"WinnerInput"],[3,"InitializeQuizInput"],[3,"Show"],[3,"Viewer"],[3,"Quiz"],[3,"Winner"]]},\
"sator_stake_viewer":{"doc":"Stake for viewers:","t":[7,5,0,5,0,5,0,0,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,3,13,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,18,18,3,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,18,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11],"n":["ID","check_id","errors","id","instruction","stake_viewer_program_id","state","types","Error","StakeStakingTimeMustBeMoreThanMinimal","StakeStakingTimeMustBeMoreThanPrevious","UnstakeCanBeDoneOnlyAfterStakeTimeLapsed","UnstakeOverflow","UnstakeStakeAccountNotDerivedFromWalletStakeProgram","borrow","borrow_mut","example","fmt","from","into","into","into","to_error_code","to_i64","to_u64","try_from","try_into","type_id","vzip","InitializeStakePool","InitializeStakePoolInput","Instruction","Stake","StakeInput","Unstake","add_definitions_recursively","add_definitions_recursively","add_definitions_recursively","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","declaration","declaration","declaration","deserialize","deserialize","deserialize","deserialize_const","deserialize_const","deserialize_const","duration","eq","example","example","example","fmt","fmt","fmt","from","from","from","initialize_stake_pool","into","into","into","ne","ranks","serialize","serialize","serialize","serialize_const","serialize_const","serialize_const","stake","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unstake","vzip","vzip","vzip","LEN","LEN","ViewerStake","ViewerStakePool","add_definitions_recursively","add_definitions_recursively","amount","borrow","borrow","borrow_mut","borrow_mut","declaration","declaration","default","default","deserialize","deserialize","deserialize_const","deserialize_const","duration","example","example","fmt","fmt","from","from","initialized","initialized","into","into","owner","owner","ranks","serialize","serialize","serialize_const","serialize_const","staked_at","staked_until","try_from","try_from","try_into","try_into","type_id","type_id","uninitialized","uninitialized","version","version","vzip","vzip","ONE","Rank","add_definitions_recursively","amount","borrow","borrow_mut","clone","clone_into","declaration","default","deserialize","deserialize_const","example","fmt","from","into","minimal_staking_time","serialize","serialize_const","to_owned","try_from","try_into","type_id","vzip"],"q":["sator_stake_viewer","","","","","","","","sator_stake_viewer::errors","","","","","","","","","","","","","","","","","","","","","sator_stake_viewer::instruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sator_stake_viewer::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sator_stake_viewer::types","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The static program ID","Confirms that a given pubkey is equivalent to the program …","","Returns the program ID","Program instruction state","","Program owned state","","","","","","","","","","","","","","","","","","","","","","","Like: 0u8[(i64,u64),(i64,u64),(i64,u64),(i64,u64)]","","","Like: 1u8(i64,u64)","","","","","","","","","","","","","","","","","","","","","","any of times from [crate::state::ViewerStake::ranks] or …","","","","","","","","","","","Creates [Instruction::InitializeStake] instruction which …","","","","","","","","","","","","Creates Instruction::Stake instruction which transfer …","","","","","","","","","","Creates Instruction::Unstake instruction which transfer …","","","","","","User stake account state","Pool state and rules","","","","","","","","","","","","","","","","","","","","","","","Error if not initialized","Error if not initialized","","","","user owner of stake","ranks 0 consider to have minimal time","","","","","","","","","","","","","","","","","","","","","","amount of token required to reach this rank","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,2,0,2,3,4,2,4,3,4,2,3,4,2,3,4,2,3,4,2,3,4,2,4,4,3,4,2,3,4,2,3,4,2,0,3,4,2,4,3,3,4,2,3,4,2,0,3,4,2,3,4,2,3,4,2,0,3,4,2,5,6,0,0,5,6,6,5,6,5,6,5,6,5,6,5,6,5,6,6,5,6,5,6,5,6,5,6,5,6,5,6,5,5,6,5,6,6,6,5,6,5,6,5,6,5,6,5,6,5,6,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":[null,[[["pubkey",3]],["bool",15]],null,[[],["pubkey",3]],null,[[],["programpubkey",6]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["programerror",4]],[[],["programresult",6]],[[],["u32",15]],[[],[["option",4],["i64",15]]],[[],[["u64",15],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[["hashmap",3]]],[[["hashmap",3]]],[[["hashmap",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["declaration",6]],[[],["declaration",6]],[[],["declaration",6]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],null,[[["stakeinput",3]],["bool",15]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["mintpubkey",6],["signerpubkey",6],["initializestakepoolinput",3]],[["programerror",4],["instruction",3],["result",4]]],[[]],[[]],[[]],[[["stakeinput",3]],["bool",15]],null,[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[["tokenaccountpubkey",6],["pubkey",3],["stakeinput",3]],[["programerror",4],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["tokenaccountpubkey",6],["signerpubkey",6],["pubkey",3]],[["programerror",4],["instruction",3],["result",4]]],[[]],[[]],[[]],null,null,null,null,[[["hashmap",3]]],[[["hashmap",3]]],null,[[]],[[]],[[]],[[]],[[],["declaration",6]],[[],["declaration",6]],[[],["viewerstakepool",3]],[[],["viewerstake",3]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],["approximateseconds",6]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["programresult",6]],[[],["programresult",6]],[[]],[[]],null,null,null,[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["programresult",6]],[[],["programresult",6]],null,null,[[]],[[]],null,null,[[["hashmap",3]]],null,[[]],[[]],[[],["rank",3]],[[]],[[],["declaration",6]],[[],["rank",3]],[[],[["error",3],["result",4]]],[[],[["result",4],["error",3]]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[4,"Error"],[4,"Instruction"],[3,"InitializeStakePoolInput"],[3,"StakeInput"],[3,"ViewerStakePool"],[3,"ViewerStake"],[3,"Rank"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};